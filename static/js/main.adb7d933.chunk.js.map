{"version":3,"sources":["reportWebVitals.js","stores/index.js","components/BeatButton.js","utils/beats.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStore","create","isPlaying","checked","setPlayingState","playState","setState","state","setChecked","checkState","BeatButton","hertz","freq","useState","listened","setListened","thisChecked","setThisChecked","thisPlaying","setThisPlaying","globalIsPlaying","globalChecked","className","onClick","e","preventDefault","console","log","left_freq","right_freq","window","leftEar","set","rightEar","initBeat","start","setTimeout","stop","type","name","disabled","onChange","event","target","App","pairs","setPairs","useEffect","freqs","hertz_freq_pairs","flatMap","h","map","f","a","i","length","j","Math","floor","random","shuffle","mergedChannel","Tone","toMaster","connect","left","right","pair","k","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adb7d933.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import create from \"zustand\";\n\nexport const useStore = create(() => ({\n  isPlaying: false,\n  checked: false,\n}));\n\nexport const getStore = () => {\n  return useStore.getState();\n};\n\nexport const setPlayingState = (playState) => {\n  useStore.setState((state) => ({ isPlaying: playState }));\n};\n\nexport const setChecked = (checkState) => {\n  useStore.setState((state) => ({ ...state, checked: checkState }));\n};\n","import React, { useState } from \"react\";\nimport { initBeat, playBeat, stopBeat } from \"../utils/beats\";\nimport { useStore, setPlayingState, setChecked } from \"../stores\";\n\nexport default function BeatButton({ hertz, freq }) {\n  const [listened, setListened] = useState(false);\n  const [thisChecked, setThisChecked] = useState(false);\n  const [thisPlaying, setThisPlaying] = useState(false);\n  const globalIsPlaying = useStore((state) => state.isPlaying);\n  const globalChecked = useStore((state) => state.checked);\n\n  const handleCheckbox = (event) => {\n    if (event.target.checked) {\n      setThisChecked(true);\n      setChecked(true);\n    } else {\n      setThisChecked(false);\n      setChecked(false);\n    }\n  };\n\n  const disableCheckbox = () => {\n    if (!listened) {\n      return true;\n    } else {\n      if (thisChecked) {\n        return false;\n      } else {\n        return globalChecked;\n      }\n    }\n  };\n\n  return (\n    <div className=\"m-5\">\n      <button\n        className=\"h-10 px-3 border-2 rounded-lg\"\n        onClick={(e) => {\n          e.preventDefault();\n          if (!globalIsPlaying) {\n            initBeat(hertz, freq);\n            setPlayingState(true);\n            setThisPlaying(true);\n            playBeat();\n            setTimeout(() => {\n              setListened(true);\n              stopBeat();\n              setPlayingState(false);\n              setThisPlaying(false);\n            }, 10000);\n          } else {\n            console.log(\"One beat is currently playing!\");\n          }\n        }}\n      >\n        <span>{thisPlaying ? \"🎵\" : listened ? \"✔️\" : \"🔈\"}</span>\n        {/* {listened && <span className=\"ml-2\">✔️</span>} */}\n      </button>\n      <input\n        type=\"checkbox\"\n        name=\"select\"\n        disabled={disableCheckbox()}\n        onChange={handleCheckbox}\n        className=\"ml-4\"\n      />\n    </div>\n  );\n}\n","import * as Tone from \"tone\";\n\nexport function initP5() {\n  window.mergedChannel = new Tone.Merge().toMaster();\n  window.leftEar = new Tone.Oscillator();\n  window.rightEar = new Tone.Oscillator();\n  window.leftEar.connect(window.mergedChannel.left);\n  window.rightEar.connect(window.mergedChannel.right);\n}\n\nexport function initBeat(hertz, freq) {\n  const left_freq = hertz - freq / 2;\n  const right_freq = hertz + freq / 2;\n\n  window.leftEar.set(\"frequency\", left_freq);\n  window.rightEar.set(\"frequency\", right_freq);\n}\n\nexport function playBeat() {\n  window.leftEar.start();\n  window.rightEar.start();\n}\n\nexport function stopBeat() {\n  window.leftEar.stop();\n  window.rightEar.stop();\n}\n","import React, { useEffect, useState } from \"react\";\nimport { initP5 } from \"./utils/beats\";\n\nimport BeatButton from \"./components/BeatButton\";\n\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nfunction App() {\n  const [pairs, setPairs] = useState([]);\n  // let hertz_freq_pairs = hertzs.flatMap((h) => freqs.map((f) => [h, f]));\n\n  useEffect(() => {\n    const hertzs = [200, 300];\n    const freqs = [2, 4, 8, 16, 24, 40];\n    let hertz_freq_pairs = hertzs.flatMap((h) => freqs.map((f) => [h, f]));\n    shuffle(hertz_freq_pairs);\n    setPairs(hertz_freq_pairs);\n    initP5();\n  }, []);\n\n  return (\n    <div className=\"flex flex-col items-center text-center justify-center h-screen\">\n      <div className=\"grid grid-cols-1 gap-y-2 divide-y-2\">\n        <p>\n          아래 스피커 버튼(🔈)을 눌러서 소리를 듣고 <br />\n          가장 <b>긍정적인</b> 감정상태를 불러일으킨 소리에 체크해 주세요.\n        </p>\n        <p>청취한 소리 (✔️ 표시) 중 한 가지 소리만 선택 가능합니다.</p>\n      </div>\n      <br />\n      <div className=\"grid grid-cols-4 gap-4\">\n        {pairs.map((pair) => {\n          let [h, f] = pair;\n          let k = `${h}_${f}`;\n          return <BeatButton hertz={h} freq={f} key={k} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}